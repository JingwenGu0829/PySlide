Metadata-Version: 2.4
Name: pyslide
Version: 0.1.0
Summary: Interactive Python Code Presentations
Home-page: https://github.com/JingwenGu0829/PySlide
Author: Jingwen Gu
Author-email: Jingwen Gu <jingwengu0829@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/JingwenGu0829/PySlide
Project-URL: Repository, https://github.com/JingwenGu0829/PySlide.git
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: black>=22.0; extra == "dev"
Requires-Dist: isort>=5.0; extra == "dev"
Requires-Dist: mypy>=0.9; extra == "dev"
Requires-Dist: flake8>=4.0; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# PySlide

PySlide is a Python library for creating interactive code presentations that bridges the gap between Jupyter notebooks and PowerPoint slides. It allows you to create beautiful, executable presentations with code, annotations, and optional visualizations.

![PySlide Demo](docs/images/demo.gif)

## Features

- Create slides with Python code and annotations
- Execute code and capture output in real-time
- Add optional visualizations and stack traces
- Beautiful syntax highlighting
- Keyboard navigation (arrow keys and space)
- Modern, clean interface

## Quick Start

```python
from pyslide import PySlide

def fibonacci(n):
    if n <= 1:
        return n
    return fibonacci(n-1) + fibonacci(n-2)

# Create presentation
presentation = PySlide()

# Add a slide
presentation.new_slide(
    code="""def fibonacci(n):
    if n <= 1:
        return n
    return fibonacci(n-1) + fibonacci(n-2)""",
    title="Fibonacci Sequence",
    description="A recursive implementation"
).annotate(1, "Function definition")

# Add stack trace visualization
presentation.add_stack_trace('fibonacci', {'fibonacci': fibonacci})

# Execute code and capture output
presentation.execute_current_slide({'fibonacci': fibonacci})

# Display the presentation
presentation.display()
```

## Installation

```bash
# Create and activate virtual environment (recommended)
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install PySlide
pip install pyslide
```

## Documentation

- [User Guide](docs/guides/index.md)
- [API Reference](docs/api/index.md)
- [Examples](docs/examples/index.md)

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

### Development Setup

1. Clone the repository:
```bash
git clone https://github.com/yourusername/pyslide.git
cd pyslide
```

2. Create a virtual environment:
```bash
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
```

3. Install development dependencies:
```bash
pip install -e ".[dev]"
```

4. Run tests:
```bash
pytest
```

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details. 
